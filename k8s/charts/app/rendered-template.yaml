---
# Source: app/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: db-credentials
  namespace: default
type: Opaque
data:
  DB_USER: "YXRha2JhbA=="
  DB_PASSWORD: "V1UtTU93REpyOUoqdHF6OQ=="
  DB_URL: "amRiYzpwb3N0Z3Jlc3FsOi8vY2UtdGFzay1jYWxjdWxhdG9yLWRiLmM3bXk2a2MwbzJ5OC5ldS1jZW50cmFsLTEucmRzLmFtYXpvbmF3cy5jb206NTQzMi9jYWxjdWxhdG9y"
---
# Source: app/templates/backend-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: backend-service
  namespace: default
spec:
  selector:
    app: backend
  ports:
  - port: 8080
    targetPort: 8080
  type: ClusterIP
---
# Source: app/templates/frontend-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: frontend-service
  namespace: default
spec:
  selector:
    app: frontend
  ports:
  - port: 80
    targetPort: 80
    name: http
  type: ClusterIP
---
# Source: app/templates/backend-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      labels:
        app: backend
    spec:
      containers:
      - name: backend
        image: 980921750296.dkr.ecr.eu-central-1.amazonaws.com/ce-task-backend:v0.0.4-alpha
        imagePullPolicy: Always
        ports:
        - containerPort: 8080

                # Add resources section here
        resources:
          requests:
            cpu: 250m    # Very low CPU request
            memory: 100Mi  # Very low memory request
          limits:
            cpu: 300m   # Slightly higher limit
            memory: 128Mi  # Slightly higher limit


        env:
        - name: JAVA_OPTS
          value: "-XX:+UseG1GC -XX:MaxGCPauseMillis=200 -XX:+ParallelRefProcEnabled -XX:+DisableExplicitGC -XX:+ExitOnOutOfMemoryError -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/tmp/heapdump.hprof -Xms50m -Xmx256m -XX:MaxMetaspaceSize=100m -XX:+UseStringDeduplication"
        - name: DB_URL
          valueFrom:
            secretKeyRef:
              name: db-credentials
              key: DB_URL
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              name: db-credentials
              key: DB_USER
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: db-credentials
              key: DB_PASSWORD
---
# Source: app/templates/frontend-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: frontend
  template:
    metadata:
      labels:
        app: frontend
    spec:
      containers:
      - name: frontend
        image: 
        imagePullPolicy: Always
        ports:
        - containerPort: 80
          name: http
        env:
          - name: MY_POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: MY_POD_IP
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
---
# Source: app/templates/frontend-ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: frontend-ingress
  namespace: default
  annotations:
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip  # Change to ip (recommended for EKS)
    alb.ingress.kubernetes.io/certificate-arn: 
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS": 443}]'
    alb.ingress.kubernetes.io/ssl-redirect: "443"
    external-dns.alpha.kubernetes.io/hostname: 
    meta.helm.sh/release-name: app
    meta.helm.sh/release-namespace: default
  labels:
    app.kubernetes.io/managed-by: Helm
spec:
  ingressClassName: alb  # Add this
  rules:
  - host: 
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: frontend-service
            port:
              number: 80
